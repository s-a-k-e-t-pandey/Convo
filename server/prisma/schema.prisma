// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  username         String     @unique
  email            String     @unique
  password         String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  messagesSent     Message[]  @relation("SentMessages") // Messages sent by the user
  messagesReceived Message[]  @relation("ReceivedMessages") // Messages received by the user
  callsSent        Call[]     @relation("Caller") // Video calls initiated by the user
  callsReceived    Call[]     @relation("Receiver")
  roomUser         RoomUser[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  createdAt  DateTime @default(now())
  senderId   String
  receiverId String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  roomId     String
  room       Room   @relation(fields: [roomId], references: [id])
}

model Call {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  callerId   String
  caller     User      @relation("Caller", fields: [callerId], references: [id])
  receiverId String
  receiver   User      @relation("Receiver", fields: [receiverId], references: [id])
  startedAt  DateTime?
  endedAt    DateTime?
}

model Room {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  messages  Message[]
  users     RoomUser[]
}

model RoomUser {
  id       String   @id @default(uuid())
  roomId   String
  userId   String
  room     Room     @relation(fields: [roomId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  joinedAt DateTime @default(now())
}
